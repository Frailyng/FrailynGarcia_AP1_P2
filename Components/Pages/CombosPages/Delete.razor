@page "/Combo/Delete"
@page "/Combo/Delete/{ComboId:int}"
@inject CombosService CombosService
@inject NavigationManager navigationManager

@rendermode InteractiveServer

<PageTitle>Eliminar Combo</PageTitle>

<!-- Notificación de éxito de eliminación -->
@if (EliminarExitoso)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>¡Combo eliminado correctamente!</strong>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (Combo != null)
{
    <div class="container">
        <div class="card shadow-header">
            <!-- Header -->
            <div class="card-header bg-primary text-white text-center py-2 rounded">
                <h3><strong>Eliminar Combo</strong></h3>
            </div>
            <div class="card-header">
                <h3 class="text-danger">¿Estás seguro de que quieres eliminar este Combo?</h3>
            </div>
            <!-- Body -->
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card shadow-lg">
                            <div class="card-header">
                                <h3 class="text-center"><strong>Datos del Combo</strong></h3>
                            </div>
                            <div class="card-body">
                                <div class="border-primary border-2 borde">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-8">
                                                <ul class="list-unstyled">
                                                    <li><strong>ComboId:</strong> @Combo.ComboId</li>
                                                    <li><strong>Fecha:</strong> @Combo.Fecha.ToShortDateString()</li>
                                                    <li><strong>Descripcion:</strong> @Combo.Descripcion</li>
                                                    <li><strong>Monto:</strong> @($"${Combo.Precio:N2}")</li>
                                                    <li><strong>Vendido:</strong> @(Combo.Vendido ? "Vendido" : "No Vendido")</li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Mostrar mensaje de bloqueo si el combo está vendido -->
            @if (Combo.Vendido)
            {
                <div class="alert alert-danger" role="alert">
                    <strong>Este combo ya ha sido vendido.</strong> No se puede eliminar.
                </div>
                <div class="card-footer d-flex justify-content-between">
                    <button class="btn btn-outline-danger" disabled>
                        <i class="bi bi-trash-fill"></i> Eliminar
                    </button>
                    <a class="btn btn-outline-primary" href="/Combo/Index">
                        <i class="bi bi-box-arrow-left"></i> Volver
                    </a>
                </div>
            }
            else
            {
                <!-- Footer -->
                <div class="card-footer d-flex justify-content-between">
                    <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">
                        <i class="bi bi-trash-fill"></i> Eliminar
                    </button>
                    <a class="btn btn-outline-primary" href="/Combo/Index">
                        <i class="bi bi-box-arrow-left"></i> Volver
                    </a>
                </div>
            }
        </div>
    </div>
}
else
{
    <p>Combo no encontrado.</p>
}

@code {
    [Parameter]
    public int ComboId { get; set; }
    public Combos? Combo { get; set; }
    private bool EliminarExitoso { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        if (ComboId != 0)
        {
            Combo = await CombosService.Buscar(ComboId);
        }
    }

    public async Task Eliminar()
    {
        if (ComboId == 0 || Combo == null)
        {
            return;
        }

        if (await CombosService.Eliminar(ComboId))
        {
            EliminarExitoso = true;
            await Task.Delay(3000); // Esperar 3 segundos para que el usuario vea la notificación
            navigationManager.NavigateTo("/Combo/Index");
        }
    }
}
